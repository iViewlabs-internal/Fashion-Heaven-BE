openapi: 3.0.3
info:
  title: Consumer Ecommerce API
  description: |-
    This is the Consymer API documentation
  termsOfService: https://www.google.com/
  version: 1.0.11

servers:
  - url: http://localhost:8001
tags:
  - name: Registeration
    description: All the API for consumer login/sign up
  - name: Cart
    description: All the cart API
  - name: Order
    description: Operations about Order
  - name: Product
    description: Operations about Products
  - name: Profile
    description: Operations about Profile
  - name: Review
    description: Operations that include reviews
paths:
  # Registeration
  /signup:
    post:
      tags:
        - Registeration
      summary: Add user
      description: Used to add all the consumer detailes and sends email
      requestBody:
        description: Used to add new user to the DB
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsumerRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsumerResponse"
        "400":
          description: Invaild Request
          content:
            application/json:
              example:
                message: "Invaild Request confirm the credentials and try again"
                status: "Fail"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /login:
    post:
      tags:
        - Registeration
      summary: Login User
      description: Used by the user to login into the system
      requestBody:
        description: Used to add new user to the DB
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsumerLoginRequest"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsumerResponse"
        "400":
          description: Incorrect details
          content:
            application/json:
              example:
                message: "Confirm the credentials and try again"
                status: "Fail"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /forget:
    post:
      tags:
        - Registeration
      summary: User Forgot his password
      description: Used by user when he forgets his password
      requestBody:
        description: Used to add new user to the DB
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsumerForgotRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              example:
                message: string
                status: "success"
                data: string
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /reset/{token}/{id}:
    post:
      parameters:
        - name: token
          in: path
          description: Token giving in the email
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID the consumer that was given in the email.
          required: true
          schema:
            type: string
      tags:
        - Registeration
      summary: Reset User Password
      description: Used by user when he wants to reset his password
      requestBody:
        description: This will help user to reset thier password
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPasswordRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              example:
                status: "success"
                message: "The link was sent to you email"
                newPass: "New Password"
        "404":
          description: User not found
          content:
            application/json:
              example:
                message: "This user dosen't exits."
                status: "Fail"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  # Profile API
  /getUser:
    get:
      tags:
        - Profile
      summary: Get all the user detailes
      description: Used to get all the user detailes
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsumerResponse"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /getUserAddress:
    get:
      tags:
        - Profile
      summary: Get all the user detailes
      description: Used to get all the user detailes
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AddressSchema"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /addAddress:
    post:
      tags:
        - Profile
      summary: Add Address for user
      description: User can add address
      requestBody:
        description: Enter the address
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddressSchema"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsumerResponse"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /deleteAddress:
    post:
      tags:
        - Profile
      summary: Add Address for user
      description: User can add address
      requestBody:
        description: Enter the address
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteAddressRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsumerResponse"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /updateConsumer:
    post:
      tags:
        - Profile
      summary: Add Address for user
      description: User can add address
      requestBody:
        description: Enter the address
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateConsumerRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsumerResponse"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  # Cart API
  /addToCart:
    post:
      tags:
        - Cart
      summary: Add item to cart
      description: Help user to put items in cart
      requestBody:
        description: Enter the detailes
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/addToCartRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/addToCartResponse"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /getCartItems:
    get:
      tags:
        - Cart
      summary: Get all items of the cart
      description: User can get all the items of cart
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getCartItemsResponse"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /deleteCartItem:
    post:
      tags:
        - Cart
      summary: Delete Cart Item
      description: User can Delete Cart Item
      requestBody:
        description: Enter the details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteCartItemRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              example:
                message: "Product in cart with Cart ID: cartItemID is Deleted"
                status: "success"
        "400":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "Resource not found"
                status: "fail"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "fail"
  /updateCart:
    post:
      tags:
        - Cart
      summary: Update Cart for user
      description: User can update cart
      requestBody:
        description: Enter the details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateCartRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/updateCartResponse"
        "400":
          description: No stock remaining
          content:
            application/json:
              example:
                message: "Product out of stock. Remaining items product.quantity"
                status: "fail"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "fail"
  /checkOutCart:
    post:
      tags:
        - Cart
      summary: Check Out Cart for user
      description: User can check out all items in the cart
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/checkOutCartResponse"
        "400":
          description: No stock remaining
          content:
            application/json:
              example:
                message: "Product out of stock. Remaining items product.quantity"
                status: "fail"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "fail"
  # Order API
  /addOrder:
    post:
      tags:
        - Order
      summary: Add Address for user
      description: User can add address
      requestBody:
        description: Enter the address
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/addOrderRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/addOrderRequestSchema"
        "400":
          description: The item is not avalaible
          content:
            application/json:
              example:
                message: "Product out of stock. Remaining items product.quantity"
                status: "fail"

        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /updateOrder:
    post:
      tags:
        - Order
      summary: Add Address for user
      description: User can add address
      requestBody:
        description: Enter the address
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateOrderRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/addOrderRequestSchema"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /getAllOrders:
    get:
      tags:
        - Order
      summary: Add Address for user
      description: User can add address
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getAllOrdersResponse"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /getOrderByID:
    post:
      tags:
        - Order
      summary: Add Address for user
      description: User can add address
      requestBody:
        description: Enter the address
        content:
          application/json:
            schema:
              type: object
              properties:
                orderID:
                  type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getOrderByIDResponse"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /cancelOrder:
    post:
      tags:
        - Order
      summary: Add Address for user
      description: User can add address
      requestBody:
        description: Enter the address
        content:
          application/json:
            schema:
              type: object
              properties:
                orderID:
                  type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              example:
                message: "Product in cart with Cart ID: cartItemID is Deleted"
                status: "success"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /filterOrders:
    post:
      tags:
        - Order
      summary: Add Address for user
      description: User can add address
      requestBody:
        description: Enter the address
        content:
          application/json:
            schema:
              type: object
              properties:
                filterMonth:
                  type: string
                filterYear:
                  type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              example:
                message: "Product in cart with Cart ID: cartItemID is Deleted"
                status: "success"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  # Review API
  /addReview:
    post:
      tags:
        - Review
      summary: Add Review for Product
      description: User can add Review to the product
      requestBody:
        description: Enter the detailes
        content:
          application/json:
            schema:
              type: object
            example:
              productID: "f021mqdnj131ndw22"
              reviewDescription: "Hello"
              orderID: "p0123m5qdnj131ndw22"
              rating: 6.7
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
              example:
                status: "success"
                message: "Resource created successfully."
        "400":
          description: The item is not avalaible
          content:
            application/json:
              example:
                message: "Bad request you haven't ordered this product"
                status: "fail"

        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /deleteReview:
    post:
      tags:
        - Review
      summary: Delete Review for Product
      description: User can delete Review to the product
      requestBody:
        description: Enter the detailes
        content:
          application/json:
            schema:
              type: object
            example:
              reviewID: "f021mqdnj131ndw22"
              productID: "ghsqenion123wu78"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
              example:
                status: "success"
                message: "Resource deleted successfully."
        "400":
          description: The item is not avalaible
          content:
            application/json:
              example:
                message: "This review ID is incorrect"
                status: "fail"

        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /updateReview:
    post:
      tags:
        - Review
      summary: Update Review for Product
      description: User can update Review to the product
      requestBody:
        description: Enter the detailes
        content:
          application/json:
            schema:
              type: object
            example:
              reviewID: "f021mqdnj131ndw22"
              productID: "ghsqenion123wu78"
              reviewDescription: "This is the updated review"
              rating: 7.1
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
              example:
                status: "success"
                message: "Resource updated successfully."
        "400":
          description: The item is not avalaible
          content:
            application/json:
              example:
                message: "This review ID is incorrect"
                status: "fail"

        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /getReview:
    post:
      tags:
        - Review
      summary: Get All Review for Product
      description: You can get Review to the product
      requestBody:
        description: Enter the detailes
        content:
          application/json:
            schema:
              type: object
            example:
              productID: "f021mqdnj131ndw22"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/getReviewResponse"
        "400":
          description: The item is not avalaible
          content:
            application/json:
              example:
                message: "This product dosen't exits"
                status: "fail"

        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  # Product Review
  /getBySKU:
    post:
      tags:
        - Product
      summary: Get the product by SKU
      description: You can get all the detailes by SKU
      requestBody:
        description: Enter the detailes
        content:
          application/json:
            schema:
              type: object
            example:
              SKU: "17625"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/getBySKUResponse"
        "400":
          description: The item is not avalaible
          content:
            application/json:
              example:
                message: "Resource not found"
                status: "fail"

        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /feedProducts/page/limit:
    get:
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
      tags:
        - Product
      summary: Get Feed Porduct
      description: Try to get all the product in the feed
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getByProductResponse"
        "400":
          description: The item is not avalaible
          content:
            application/json:
              example:
                message: "Unauthorized access."
                status: "fail"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /searchProduct/keyword:
    get:
      parameters:
        - name: keyword
          in: query
          description: Keyword to
          schema:
            type: integer
      tags:
        - Product
      summary: Get all the product with keyboard
      description: Try to get all the product in the feed
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        SKU:
                          type: string
                        name:
                          type: string
                        price:
                          type: number
                        image:
                          type: string
                      required:
                        - SKU
                        - name
                        - price
                        - image
                  message:
                    type: string
        "400":
          description: The item is not avalaible
          content:
            application/json:
              example:
                message: "Unauthorized access."
                status: "fail"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
  /productFilter:
    get:
      parameters:
        - name: audience
          in: query
          description: Page number
          schema:
            type: integer
        - name: category
          in: query
          description: Number of items per page
          schema:
            type: integer
        - name: minPrice
          in: query
          description: Page number
          schema:
            type: integer
        - name: maxPrice
          in: query
          description: Number of items per page
          schema:
            type: integer
      tags:
        - Product
      summary: Get all the product by adding product filter
      description: Try to get all the product in the feed
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/filterProductResponse"
        "400":
          description: The item is not avalaible
          content:
            application/json:
              example:
                message: "Unauthorized access."
                status: "fail"
        "500":
          description: Internal sever error
          content:
            application/json:
              example:
                message: "A server error has occurred"
                status: "Fail"
components:
  schemas:
    AddressSchema:
      type: object
      properties:
        country:
          type: string
        state:
          type: string
        city:
          type: string
        zipCode:
          type: integer
        addressLine1:
          type: string
        addressLine2:
          type: string
    updateCartSchema:
      type: object
      properties:
        acknowledged:
          type: string
        modifiedCount:
          type: integer
        upsertedId:
          type: string
        upsertedCount:
          type: integer
        matchedCount:
          type: integer
    checkOutCartSchema:
      type: object
      properties:
        productID:
          type: string
        orderDate:
          type: string
        orderStatus:
          type: string
        consumerID:
          type: string
        size:
          type: string
        quantity:
          type: integer
        color:
          type: string
    addOrderRequestSchema:
      type: object
      properties:
        productID:
          type: string
        orderDate:
          type: string
        size:
          type: string
        quantity:
          type: integer
        color:
          type: string
    # Consumer API Schema
    ConsumerResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: "#/components/schemas/ConsumerResponseObj"
        status:
          type: string
    ConsumerResponseObj:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phoneNumber:
          type: string
        _id:
          type: string
        address:
          type: array
          items:
            type: object
    ConsumerRequest:
      type: object
      properties:
        firstName:
          type: string
          example: Pink
        lastName:
          type: string
          example: Sharma
        email:
          type: string
          example: Pink123@gmail.com
        password:
          type: string
        confirmPassword:
          type: string
        phoneNumber:
          type: integer
          format: int64
          example: 9874563564
    ConsumerLoginRequest:
      type: object
      properties:
        email:
          type: string
          example: Example@email.com
        password:
          type: string
    ConsumerForgotRequest:
      type: object
      properties:
        email:
          type: string
          example: Example@email.com
    NewPasswordRequest:
      type: object
      properties:
        password:
          type: string
          example: password
        confirmPassword:
          type: string
          example: password
    deleteAddressRequest:
      type: object
      properties:
        addressID:
          type: string
          example: "1231414"
    updateConsumerRequest:
      type: object
      properties:
        firstName:
          type: string
          example: "Pink"
        lasttName:
          type: string
          example: "Green"
        email:
          type: string
          example: "123@email.com"
        phoneNumber:
          type: string
          example: "929292929"
        age:
          type: string
          example: "32"
    # Cart API Schema
    addToCartRequest:
      type: object
      properties:
        productID:
          type: string
          example: "Pink"
        color:
          type: string
          example: "Green"
        size:
          type: string
          example: "123@email.com"
    addToCartResponse:
      type: object
      properties:
        productID:
          type: string
          example: "Pink"
        consumerID:
          type: string
          example: "Green"
        size:
          type: string
          example: "123@email.com"
        quantity:
          type: integer
          example: 12
        _id:
          type: string
          example: "123"
    getCartItemsResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        schema:
          type: array
          items:
            $ref: "#/components/schemas/addToCartResponse"
        message:
          type: string
          example: "Here are all the product in your cart"
        subTotal:
          type: integer
          example: "134"
    deleteCartItemRequest:
      type: object
      properties:
        cartItemID:
          type: string
          example: "Cart ID"
    updateCartRequest:
      type: object
      properties:
        productID:
          type: string
          example: "131u11f1f6bcva"
        size:
          type: string
          example: "XL"
        quantity:
          type: integer
          example: 1
    updateCartResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        data:
          type: array
          items:
            $ref: "#/components/schemas/updateCartSchema"
        message:
          type: string
    checkOutCartResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        orderedItems:
          type: array
          items:
            $ref: "#/components/schemas/checkOutCartSchema"
        message:
          type: string
    # Order API schema
    addOrderRequest:
      type: object
      properties:
        productID:
          type: string
        orderDate:
          type: string
        size:
          type: string
        quantity:
          type: integer
        color:
          type: string
    updateOrderRequest:
      type: object
      properties:
        orderID:
          type: string
        orderStatus:
          type: string
    getAllOrdersResponse:
      type: array
      items:
        type: object
        properties:
          orderID:
            type: string
          name:
            type: string
          orderDate:
            type: string
          image:
            type: string
          orderStatus:
            type: string
    getOrderByIDResponse:
      type: object
      properties:
        orderDate:
          type: string
        orderStatus:
          type: string
        consumeId:
          type: string
        quantity:
          type: integer
        size:
          type: string
        color:
          type: string
        productData:
          type: string
    # Review
    getReviewResponse:
      type: object
      properties:
        rating:
          type: string
        reviewDescription:
          type: string
        consumerID:
          type: string
        _id:
          type: string
    # Product
    getBySKUResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
          properties:
            _id:
              type: string
            name:
              type: string
            price:
              type: integer
            size:
              type: array
              items:
                type: string
            SKU:
              type: string
            productDetails:
              type: string
            image:
              type: string
            quantity:
              type: integer
            color:
              type: array
              items:
                type: string
            audience:
              type: string
            adminId:
              type: string
            date:
              type: string
            reviews:
              type: array
              items:
                $ref: "#/components/schemas/getReviewResponse"
            __v:
              type: integer
    getByProductResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
          properties:
            next:
              type: object
              properties:
                page:
                  type: integer
                limit:
                  type: integer
            previous:
              type: object
              properties:
                page:
                  type: integer
                limit:
                  type: integer
            result:
              type: array
              items:
                type: object
                properties:
                  SKU:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
                  image:
                    type: string
            totalData:
              type: integer
    ResourceItemFilterProduct:
      type: object
      properties:
        SKU:
          type: string
        name:
          type: string
        image:
          type: string
        price:
          type: number
      required:
        - SKU
        - name
        - image
        - price
    filterProductResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/ResourceItemFilterProduct"
      required:
        - status
        - message
        - data
